// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"
	mock "github.com/stretchr/testify/mock"
	registry "psql-mcp-registry/internal/model"
)

// Registry is an autogenerated mock type for the Registry type
type Registry struct {
	mock.Mock
}

// AddInstance provides a mock function with given fields: ctx, instance
func (_m *Registry) AddInstance(ctx context.Context, instance registry.Instance) error {
	ret := _m.Called(ctx, instance)

	if len(ret) == 0 {
		panic("no return value specified for AddInstance")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, registry.Instance) error); ok {
		r0 = rf(ctx, instance)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRegistry creates a new instance of Registry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRegistry(t interface {
	mock.TestingT
	Cleanup(func())
}) *Registry {
	mock := &Registry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
